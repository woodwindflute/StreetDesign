!(function (t, e) { if (typeof exports === 'object' && typeof module === 'object')module.exports = e(); else if (typeof define === 'function' && define.amd)define([], e); else { const i = e(); for (const a in i)(typeof exports === 'object' ? exports : t)[a] = i[a] } }(self, function () { return t = { 631: t => { const e = [new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2()]; function i (t, i, a, n) { const r = 1 / n; const s = 1 / a; return e[0].set(r * i, s * t + s), e[1].set(r * i, s * t), e[2].set(r * i + r, s * t), e[3].set(r * i + r, s * t + s), e }AFRAME.registerComponent('atlas-uvs', { dependencies: ['geometry'], schema: { totalColumns: { type: 'int', default: 1 }, totalRows: { type: 'int', default: 1 }, column: { type: 'int', default: 1 }, row: { type: 'int', default: 1 } }, update: function () { const t = this.data; const e = i(t.row - 1, t.column - 1, t.totalRows, t.totalColumns); const a = this.el.getObject3D('mesh').geometry; const n = new Float32Array([e[0].x, e[0].y, e[3].x, e[3].y, e[1].x, e[1].y, e[2].x, e[2].y]); a.setAttribute('uv', new THREE.BufferAttribute(n, 2)), a.uvsNeedUpdate = !0 } }), AFRAME.registerComponent('dynamic-texture-atlas', { schema: { canvasId: { default: 'dynamicAtlas' }, canvasHeight: { default: 1024 }, canvasWidth: { default: 1024 }, debug: { default: !1 }, numColumns: { default: 8 }, numRows: { default: 8 } }, multiple: !0, init: function () { const t = this.canvas = document.createElement('canvas'); t.id = this.data.canvasId, t.height = this.data.canvasHeight, t.width = this.data.canvasWidth, this.ctx = t.getContext('2d'), document.body.appendChild(t), this.data.debug && (t.style.left = 0, t.style.top = 0, t.style.position = 'fixed', t.style.zIndex = 9999999999) }, drawTexture: function (t, e, a, n, r) { const s = this.canvas; const o = this.data; t.complete || (t.onload = () => { this.drawTexture(t, e, a) }); const l = r || s.height / o.numRows; const d = n || s.width / o.numColumns; return this.ctx.drawImage(t, d * e, d * a, d, l), i(e, a, o.numRows, o.numColumns) } }), t.exports.getGridUvs = i }, 485: () => { if (typeof AFRAME === 'undefined') throw new Error('Component attempted to register before AFRAME was available.'); const t = {}; const e = {}; AFRAME.registerComponent('gltf-part-plus', { schema: { buffer: { default: !0 }, part: { type: 'string' }, src: { type: 'asset' }, resetPosition: { default: !1 } }, init: function () { this.dracoLoader = document.querySelector('a-scene').systems['gltf-model'].getDRACOLoader() }, update: function () { const t = this.el; const e = this.data; !this.data.part && this.data.src || this.getModel(function (i) { i && (e.resetPosition && (t.setAttribute('position', i.position.x + ' ' + i.position.y + ' ' + i.position.z), i.position.set(0, 0, 0)), t.setObject3D('mesh', i), t.emit('model-loaded', { format: 'gltf', part: this.modelPart })) }) }, getModel: function (i) { const a = this; if (!e[this.data.src]) return t[this.data.src] ? t[this.data.src].then(function (t) { i(a.selectFromModel(t)) }) : void (t[this.data.src] = new Promise(function (n) { const r = new THREE.GLTFLoader(); a.dracoLoader && r.setDRACOLoader(a.dracoLoader), r.load(a.data.src, function (r) { const s = r.scene || r.scenes[0]; e[a.data.src] = s, delete t[a.data.src], i(a.selectFromModel(s)), n(s) }, function () {}, console.error) })); i(this.selectFromModel(e[this.data.src])) }, selectFromModel: function (t) { let e, i; if (i = t.getObjectByName(this.data.part)) return e = i.getObjectByProperty('type', 'Mesh').clone(!0), this.data.buffer ? (e.geometry = e.geometry.toNonIndexed(), e) : (e.geometry = (new THREE.Geometry()).fromBufferGeometry(e.geometry), e); console.error('[gltf-part] `' + this.data.part + '` not found in model.') } }), AFRAME.registerComponent('model-center', { schema: { bottomAlign: { default: !1 } }, init: function () { this.el.addEventListener('model-loaded', t => { const e = this.el.getObject3D('mesh'); if (e.position.set(0, 0, 0), e.geometry.center(), this.data.bottomAlign) { const i = (new THREE.Box3()).setFromObject(e); const a = i.max.sub(i.min).y; e.position.y = a / 2 } }) } }), AFRAME.registerComponent('anisotropy', { schema: { default: 0 }, dependencies: ['material', 'geometry'], init: function () { this.maxAnisotropy = this.el.sceneEl.renderer.capabilities.getMaxAnisotropy(), ['model-loaded', 'materialtextureloaded'].forEach(t => this.el.addEventListener(t, () => { const t = this.el.getObject3D('mesh'); let e = this.data; (e = +e || 0) === 0 && (e = this.maxAnisotropy), t.traverse(t => { !0 === t.isMesh && t.material.map !== null && (t.material.map.anisotropy = e, t.material.map.needsUpdate = !0) }) }, !1)) } }), AFRAME.registerComponent('instancedmesh', { schema: { retainParent: { default: !1 }, retainChildren: { default: !1 }, inheritMat: { default: !0 }, mergeInstances: { default: !1 }, frustumCulled: { default: !0 } }, init: function () {}, update: function () { let t; let e; let i; let a; const n = this.el; const r = this.el.children; let s = 0; const o = (t = new THREE.Vector3(), e = new THREE.Euler(), i = new THREE.Vector3(), a = new THREE.Quaternion(), function (r, s) { t.x = n.children[r].object3D.position.x, t.y = n.children[r].object3D.position.y, t.z = n.children[r].object3D.position.z, e.x = n.children[r].object3D.rotation.x, e.y = n.children[r].object3D.rotation.y, e.z = n.children[r].object3D.rotation.z, a.setFromEuler(e), i.x = n.children[r].object3D.scale.x, i.y = n.children[r].object3D.scale.y, i.z = n.children[r].object3D.scale.z, s.compose(t, a, i) }); for (const l of r)s += 1; const d = this.el.getObject3D('mesh'); if (d) { const m = d.material.clone(); let c = null; d.traverse(function (t) { !0 === t.isMesh && (c = t.geometry) }); for (var u = new THREE.InstancedMesh(c, m, s), p = 0; p < s; p++) { const g = new THREE.Matrix4(); o(p, g), u.setMatrixAt(p, g) }u.frustumCulled = this.data.frustumCulled, this.el.object3D.add(u), this.data.retainParent || this.el.object3D.remove(d), this.data.inheritMat && (this.el.components.material.material = m) } else this.el.addEventListener('model-loaded', t => { this.update(this.data) }) } }) }, 844: (t, e, i) => { const a = i(199); const n = i(394); const r = { suffix: '-t1' }; const s = { 'bike-lane': 1.8, 'drive-lane': 3, divider: 0.3, 'public-zone': 0.3, 'parking-lane': 3, sidewalk: 3, 'sidewalk-tree': 3, 'turn-lane': 3, 'bus-lane': 3, 'light-rail': 3, streetcar: 3, 'sidewalk-wayfinding': 3, 'sidewalk-lamp': 3, 'sidewalk-bike-rack': 3, 'sidewalk-bench': 3, 'scooter-drop-zone': 3, scooter: 1.8, bikeshare: 3, 'flex-zone-curb': 3, 'transit-shelter': 3 }; function o (t) { for (let e = t.objectMixinId, i = void 0 === e ? '' : e, a = t.parentEl, n = void 0 === a ? null : a, r = t.step, s = void 0 === r ? 15 : r, o = t.radius, l = void 0 === o ? 60 : o, d = t.rotation, m = void 0 === d ? '0 0 0' : d, c = t.positionXYString, u = void 0 === c ? '0 0' : c, p = t.randomY, g = void 0 !== p && p, h = -1 * l; h <= l; h += s) { const b = document.createElement('a-entity'); b.setAttribute('class', i), b.setAttribute('position', u + ' ' + h), b.setAttribute('mixin', i), g ? b.setAttribute('rotation', '0 ' + Math.floor(361 * Math.random()) + ' 0') : b.setAttribute('rotation', m), n.append(b) } } function l (t) { const e = document.createElement('a-entity'); return e.setAttribute('class', 'stencils-parent'), e.setAttribute('position', t), e } function d (t) { const e = document.createElement('a-entity'); return e.setAttribute('class', 'track-parent'), e.setAttribute('position', t + ' -0.2 0'), e } function m (t) { const e = document.createElement('a-entity'); return e.setAttribute('class', 'safehit-parent'), e.setAttribute('position', t + ' 0 0'), e } function c (t) { return t === 'colored' ? 'surface-red bus-lane' : t === 'grass' ? 'surface-green bus-lane' : 'bus-lane' } function u (t, e, i) { const a = t[0] === 'inbound' ? 0 : 180; const n = document.createElement('a-entity'); return n.setAttribute('class', e), n.setAttribute('position', i + ' 0 0'), n.setAttribute('rotation', '0 ' + a + ' 0'), n.setAttribute('mixin', e), n } function p (t, e) { const i = document.createElement('a-entity'); const a = 90 * t; const n = document.createElement('a-entity'); n.setAttribute('class', 'bus'), n.setAttribute('position', e + ' 1.4 0'), n.setAttribute('rotation', '0 ' + a + ' 0'), n.setAttribute('mixin', 'bus'), i.append(n); const r = document.createElement('a-entity'); return r.setAttribute('class', 'bus-shadow'), r.setAttribute('position', e + ' 0.01 0'), r.setAttribute('rotation', '-90 ' + a + ' 0'), r.setAttribute('mixin', 'bus-shadow'), i.append(r), i } function g (t) { let e; const i = document.createElement('a-entity'); return (e = document.createElement('a-entity')).setAttribute('position', t + ' 1 0'), e.setAttribute('mixin', 'wayfinding-box'), i.append(e), (e = document.createElement('a-entity')).setAttribute('position', t + ' 1.2 0.06'), e.setAttribute('geometry', 'primitive: plane; width: 0.8; height: 1.6'), e.setAttribute('material', 'src:#wayfinding-map'), i.append(e), (e = document.createElement('a-entity')).setAttribute('position', t + ' 1.2 -0.06'), e.setAttribute('rotation', '0 180 0'), e.setAttribute('geometry', 'primitive: plane; width: 0.8; height: 1.6'), e.setAttribute('material', 'src:#wayfinding-map'), i.append(e), i } function h (t) { const e = document.createElement('a-entity'); return e.setAttribute('class', 'bench-parent'), e.setAttribute('position', t + ' 0 3.5'), e } function b (t) { const e = document.createElement('a-entity'); return e.setAttribute('class', 'bikerack-parent'), e.setAttribute('position', t + ' 0 -3.5'), e } function f (t, e) { const i = document.createElement('a-entity'); i.setAttribute('class', 'bikeshare'), i.setAttribute('position', t + ' 0 0'), i.setAttribute('mixin', 'bikeshare'); const a = e[0] === 'left' ? 90 : 270; return i.setAttribute('rotation', '0 ' + a + ' 0'), i } function y (t) { const e = document.createElement('a-entity'); return e.setAttribute('class', 'tree-parent'), e.setAttribute('position', t + ' 0 7'), e } function x (t) { const e = document.createElement('a-entity'); return e.setAttribute('class', 'lamp-parent'), e.setAttribute('position', t + ' 0 0'), e } function v (t, e, i) { const a = document.createElement('a-entity'); return a.setAttribute('class', 'bus-stop'), a.setAttribute('position', t + 0.75 * e + ' 0 0'), a.setAttribute('rotation', '-90 ' + i + ' 0'), a.setAttribute('mixin', 'bus-stop'), a } function w (t, e, i, a, n, s, o) { const l = document.createElement('a-entity'); const d = t + ' ' + s / 150 + ' 1'; return l.setAttribute('scale', d), console.log(d), l.setAttribute('position', e + ' ' + i + ' 0'), l.setAttribute('rotation', '270 ' + a + ' 0'), l.setAttribute('mixin', n + r.suffix), l.setAttribute('text-value', o), l.setAttribute('display-meter', 'red'), console.log(l), l }t.exports.processSegments = function (t, e, i) { let r = i / 2; i > 12 && (r = (i - 12) / 2), e && (t = (function (t) { function e (t) { return t.slice(t.length - 4) === 'lane' || t === 'light-rail' || t === 'streetcar' } return t.reduce(function (t, i, a, n) { if (a === 0) return t.concat(i); const r = n[a - 1]; if (e(i.type) && e(r.type)) { let s = 'solid'; i.type === r.type && (s = 'dashed'), (i.type === 'drive-lane' && r.type === 'turn-lane' || r.type === 'drive-lane' && i.type === 'turn-lane') && (s = 'dashed'), i.variantString.split('|')[0] !== r.variantString.split('|')[0] && (s = 'doubleyellow', i.type === 'bike-lane' && r.type === 'bike-lane' && (s = 'shortdashedyellow'), (i.type === 'turn-lane' && r.type === 'parking-lane' || i.type === 'parking-lane' && r.type === 'turn-lane') && (s = 'solidyellow'), (i.type === 'drive-lane' && r.type === 'parking-lane' || i.type === 'parking-lane' && r.type === 'drive-lane') && (s = 'solidyellow'), i.type === 'parking-lane' && r.type === 'parking-lane' && (s = '')), i.type === 'turn-lane' && i.variantString.split('|')[1] === 'shared' ? s = 'soliddashedyellow' : r.type === 'turn-lane' && r.variantString.split('|')[1] === 'shared' && (s = 'soliddashedyellowinverted'), t.push({ type: 'separator', variantString: s, width: 0 }) } return (e(i.type) && r.type === 'divider' || e(r.type) && i.type === 'divider') && t.push({ type: 'separator', variantString: 'solid', width: 0 }), (e(i.type) && r.type === 'public-zone' || e(r.type) && i.type === 'public-zone') && t.push({ type: 'separator', variantString: 'solid', width: 0 }), t.push(i), t }, []) }(t))); const A = (function (t) { const e = document.createElement('a-entity'); const i = 0 - n.calcStreetWidth(t) / 2; return e.setAttribute('position', i + ' 0 0'), e }(t)); A.classList.add('street-parent'); for (var _, S = 0, k = 0; k < t.length; k++) { const E = document.createElement('a-entity'); E.classList.add('segment-parent-' + k); const M = t[k].type; const j = 0.3048 * t[k].width; let R = j / s[M]; const C = (S += j) - 0.5 * j; let I = 0; const L = t[k].variantString.split('|'); let B = L[0] === 'inbound' ? 180 : 0; const T = L[0] === 'outbound' ? 1 : -1; let D = t[k].type; if (t[k].variantString === 'planting-strip' && (D = 'public-zone'), t[k].type === 'drive-lane' && L[1] === 'sharrow') { const O = l(C + ' 0.015 0'); o({ objectMixinId: 'stencils sharrow', parentEl: O, rotation: '-90 ' + B + ' 0', step: 10, radius: r }), E.append(O) } else if (t[k].type === 'bike-lane' || t[k].type === 'scooter') { const F = l(C + ' 0.015 0'); D = (_ = L[1]) === 'red' ? 'surface-red bike-lane' : _ === 'green' ? 'surface-green bike-lane' : 'bike-lane', o({ objectMixinId: 'stencils bike-lane', parentEl: F, rotation: '-90 ' + B + ' 0', step: 20, radius: r }), E.append(F) } else if (t[k].type === 'light-rail' || t[k].type === 'streetcar') { D = c(L[1]); var P = t[k].type === 'streetcar' ? 'trolley' : 'tram'; E.append(u(L, P, C)); const H = d(C); o({ objectMixinId: 'track', parentEl: H, step: 20.25, radius: r }), E.append(H) } else if (t[k].type === 'turn-lane') { D = 'drive-lane'; let N = L[1]; L[0] === 'inbound' && (N = N.replace(/left|right/g, function (t) { return t === 'left' ? 'right' : 'left' })), L[1] === 'shared' && (N = 'left'), L[1] === 'left-right-straight' && (N = 'all'); const U = 'stencils ' + N; const z = l(C + ' 0.015 0'); if (o({ objectMixinId: U, parentEl: z, rotation: '-90 ' + B + ' 0', step: 15, radius: r }), E.append(z), L[1] === 'shared') { const J = l(C + ' 0.015 ' + -3 * T); o({ objectMixinId: U, parentEl: J, rotation: '-90 ' + (B + 180) + ' 0', step: 15, radius: r }), E.append(J) } } else if (t[k].type === 'divider' && L[0] === 'bollard') { D = t[k].variantString === 'planting-strip' ? 'public-zone' : 'divider'; const G = m(C); o({ objectMixinId: 'safehit', parentEl: G, step: 4, radius: r }), E.append(G) } else if (t[k].type === 'public-zone' && L[0] === 'bollard') { D = 'public-zone'; const W = m(C); o({ objectMixinId: 'safehit', parentEl: W, step: 4, radius: r }), E.append(W) } else if (t[k].type === 'bus-lane') { D = c(L[1]), E.append(p(T, C)); let V = void 0; o({ objectMixinId: 'stencils word-bus', parentEl: V = l(C + ' 0.015 0'), rotation: '-90 ' + B + ' 0', step: 50, radius: r }), E.append(V), o({ objectMixinId: 'stencils word-taxi', parentEl: V = l(C + ' 0.015 10'), rotation: '-90 ' + B + ' 0', step: 50, radius: r }), E.append(V), o({ objectMixinId: 'stencils word-only', parentEl: V = l(C + ' 0.015 20'), rotation: '-90 ' + B + ' 0', step: 50, radius: r }), E.append(V) } else if (t[k].type === 'drive-lane');else if (t[k].type === 'sidewalk-wayfinding')E.append(g(C)); else if (t[k].type === 'sidewalk-bench') { const q = h(C); const Y = L[0] === 'right' ? -90 : 90; L[0] === 'center' || (o({ objectMixinId: 'bench', parentEl: q, rotation: '0 ' + Y + ' 0', radius: r }), E.append(q)) } else if (t[k].type === 'sidewalk-bike-rack') { const X = b(C); o({ objectMixinId: 'bikerack', parentEl: X, rotation: '0 ' + (L[1] === 'sidewalk-parallel' ? 90 : 0) + ' 0', radius: r }), E.append(X) } else if (t[k].type === 'bikeshare')E.append(f(C, L)); else if (t[k].type === 'sidewalk-tree') { const K = y(C); o({ objectMixinId: P = L[0] === 'palm-tree' ? 'palm-tree' : 'tree3', parentEl: K, randomY: !0, radius: r }), E.append(K) } else if (t[k].type !== 'sidewalk-lamp' || L[1] !== 'modern' && L[1] !== 'pride') if (t[k].type === 'sidewalk-lamp' && L[1] === 'traditional') { const Q = x(C); o({ objectMixinId: 'lamp-traditional', parentEl: Q, radius: r }), E.append(Q) } else if (t[k].type === 'transit-shelter') { const $ = L[0] === 'right' ? 0 : 180; const Z = L[0] === 'right' ? 1 : -1; E.append(v(C, Z, $)) } else t[k].type === 'separator' && L[0] === 'dashed' ? (D = 'markings dashed-stripe', I += 0.01, R = 1) : t[k].type === 'separator' && L[0] === 'solid' ? (D = 'markings solid-stripe', I += 0.01, R = 1) : t[k].type === 'separator' && L[0] === 'solidyellow' ? (D = 'markings solid-yellow', I += 0.01, R = 1) : t[k].type === 'separator' && L[0] === 'doubleyellow' ? (D = 'markings solid-doubleyellow', I += 0.01, R = 1) : t[k].type === 'separator' && L[0] === 'shortdashedyellow' ? (D = 'markings yellow short-dashed-stripe', I += 0.01, R = 1) : t[k].type === 'separator' && L[0] === 'soliddashedyellow' ? (D = 'markings yellow solid-dashed', I += 0.01, R = 1) : t[k].type === 'separator' && L[0] === 'soliddashedyellowinverted' ? (D = 'markings yellow solid-dashed', I += 0.01, R = 1, B = '180') : t[k].type === 'parking-lane' && (D = 'drive-lane'); else { const tt = x(C); o({ objectMixinId: 'lamp-modern', parentEl: tt, rotation: '0 ' + (L[0] === 'right' ? -90 : 90) + ' 0', radius: r }), E.append(tt), L[0] === 'both' && o({ objectMixinId: 'lamp-modern', parentEl: tt, rotation: '0 -90 0', radius: r }), L[1] !== 'pride' || L[0] !== 'right' && L[0] !== 'both' || o({ objectMixinId: 'pride-flag', parentEl: tt, positionXYString: '0.409 3.345', radius: r }), L[1] !== 'pride' || L[0] !== 'left' && L[0] !== 'both' || o({ objectMixinId: 'pride-flag', parentEl: tt, rotation: '0 -180 0', positionXYString: '-0.409 3.345', radius: r }) }a.isSidewalk(t[k].type) && (D = 'sidewalk'), console.log('length', i), E.append(w(R, C, I, B, D, i, j)), A.append(E) } return A }, t.exports.processBuildings = function (t, e, i, n, r) { const s = document.createElement('a-entity'); s.classList.add('buildings-parent'); const l = 150; return [t, e].forEach(function (t, e) { if (t.length !== 0) { const r = e === 0 ? 'left' : 'right'; const d = r === 'left' ? -1 : 1; const m = (75 + i / 2) * d; if (n) { const c = JSON.stringify(a.createGroundArray(t)); const u = document.createElement('a-entity'); u.setAttribute('create-from-json', 'jsonString', c), u.setAttribute('position', m + ' 0 0'), u.classList.add('ground-' + r), s.appendChild(u) } if (t === 'narrow' || t === 'wide' || t === 'grass') { const p = a.createBuildingsArray(l); const g = JSON.stringify(p); const h = document.createElement('a-entity'); h.setAttribute('position', m + -72 * d + ' 0 ' + 77 * d), h.setAttribute('rotation', '0 ' + 90 * d + ' 0'), h.setAttribute('create-from-json', 'jsonString', g), h.classList.add('block-' + r), s.append(h) } if (t === 'residential') { const b = a.createBuildingsArray(l, 'residential'); const f = JSON.stringify(b); const y = document.createElement('a-entity'); y.setAttribute('position', m + -64 * d + ' -0.75 ' + 75 * d), y.setAttribute('rotation', '0 ' + 90 * d + ' 0'), y.setAttribute('create-from-json', 'jsonString', f), y.classList.add('suburbia-' + r), s.append(y) } if (t === 'waterfront') { const x = m - d * l / 2; const v = document.createElement('a-entity'); v.setAttribute('class', 'seawall-parent'), v.setAttribute('position', x + ' 0 10'), v.classList.add('seawall-parent-' + r), s.appendChild(v), o({ objectMixinId: 'seawall', parentEl: v, rotation: '-90 ' + (r === 'right' ? -90 : 90) + ' 0', step: 15, radius: 70 }) } if (t === 'fence' || t === 'parking-lot') { const w = m - d * l / 2; const A = document.createElement('a-entity'); A.setAttribute('class', 'fence-parent'), A.setAttribute('position', w + ' 0 0'), A.classList.add('fence-parent-' + m), o({ objectMixinId: 'fence', parentEl: A, rotation: '0 ' + (r === 'right' ? -90 : 90) + ' 0', step: 9.25, radius: 70 }), s.appendChild(A) } } }), s } }, 234: () => { let t, e; t = !1, e = new THREE.FileLoader(), window.AFRAME.registerElement('streetmix-assets', { prototype: Object.create(window.AFRAME.ANode.prototype, { createdCallback: { value: function () { this.setAttribute('src', ''), this.isAssetItem = !0, this.isAssets = !0, this.fileLoader = e, this.timeout = null } }, attachedCallback: { value: function () { if (!t) { let e; this.parentNode && this.parentNode.hasLoaded && console.warn('Assets have already loaded. streetmix-assets may have problems'), t = !0, this.innerHTML = ((e = this.getAttribute('url')) || (e = 'https://' + location.host + '/pages/plan-view/'), console.log('[street]', 'Using street assets from', e), '\n          \x3c!-- audio --\x3e\n          <audio id="ambientmp3" src="'.concat(e, 'assets/audio/SSL_16_11_AMB_EXT_SF_ALAMO_SQ.mp3" preload="none" crossorigin="anonymous"></audio>\n          <audio id="tram-pass-mp3" src="').concat(e, 'assets/audio/Tram-Pass-By-Fast-shortened.mp3" preload="auto" crossorigin="anonymous"></audio>\n          <audio id="trolley-pass-mp3" src="').concat(e, 'assets/audio/Streetcar-passing.mp3" preload="auto" crossorigin="anonymous"></audio>\n          <audio id="suburbs-mp3" src="').concat(e, 'assets/audio/AMB_Suburbs_Afternoon_Woods_Spring_Small_ST_MKH8050-30shortened_amplified.mp3" preload="none" crossorigin="anonymous"></audio>\n          <audio id="parking-lot-mp3" src="').concat(e, 'assets/audio/Parking_lot_ambience_looping.mp3" preload="none" crossorigin="anonymous"></audio>\n          <audio id="waterfront-mp3" src="').concat(e, 'assets/audio/combined_UKdock4_and_water_pier_underneath_ambience.mp3" preload="none" crossorigin="anonymous"></audio>\n          <audio id="suburbs2-mp3" src="').concat(e, 'assets/audio/AMB_Suburbs_Spring_Day_Lawnmowers_Birds_MS_ST_MKH8050-30shortened.mp3" preload="none" crossorigin="anonymous"></audio>\n  \n          \x3c!-- sidewalk props --\x3e\n          <a-asset-item id="treemodel3" src="').concat(e, 'assets/objects/SM_Env_Tree_03.gltf"></a-asset-item>\n          <a-asset-item id="palmtreemodel" src="').concat(e, 'assets/objects/PalmTree.gltf"></a-asset-item>\n          <a-asset-item id="benchmodel" src="').concat(e, 'assets/objects/SM_Prop_ParkBench_02.gltf"></a-asset-item>\n          <a-asset-item id="bikerackmodel" src="').concat(e, 'assets/objects/bikerack.glb"></a-asset-item>\n          <a-asset-item id="bikesharemodel" src="').concat(e, 'assets/objects/bikeshare.glb"></a-asset-item>\n          <a-asset-item id="lamp-modern-glb" src="').concat(e, 'assets/objects/lamp-post-modern-centered.glb"></a-asset-item>\n          <a-asset-item id="lamp-traditional-glb" src="').concat(e, 'assets/objects/lamp-post-traditional.glb"></a-asset-item>\n          <a-asset-item id="bus-stop-glb" src="').concat(e, 'assets/objects/ccFO2EGGIq9-bus-stop.glb"></a-asset-item>\n          <img id="wayfinding-map" src="').concat(e, 'assets/objects/wayfinding.jpg" crossorigin="anonymous" />\n  \n          \x3c!-- vehicles --\x3e\n          <a-asset-item id="trammodel" src="').concat(e, 'assets/objects/tram_siemens_avenio.gltf"></a-asset-item>\n          <a-asset-item id="trolleymodel" src="').concat(e, 'assets/objects/godarvilletram.gltf"></a-asset-item>\n          <a-asset-item id="xd40" src="').concat(e, 'assets/objects/bus/xd40-draco.glb"></a-asset-item>\n          <a-asset-item id="carmodel" src="').concat(e, 'assets/objects/SM_Veh_Car_Sedan_01.gltf"></a-asset-item>\n  \n          \x3c!-- blocks --\x3e\n          <a-asset-item id="blockmodel" src="').concat(e, 'assets/objects/buildings.glb"></a-asset-item>\n          <a-asset-item id="suburbiamodel" src="').concat(e, 'assets/objects/suburbia/suburbia-fixwindowuvs-only3-draco.glb"></a-asset-item>\n  \n          <a-asset-item id="fence-model" src="').concat(e, 'assets/objects/fence4/fence4.gltf"></a-asset-item>\n          <a-asset-item id="seawall-model" src="').concat(e, 'assets/objects/seawall.gltf"></a-asset-item>\n  \n          \x3c!-- lane objects --\x3e\n          <a-asset-item id="trackmodel" src="').concat(e, 'assets/objects/track.gltf"></a-asset-item>\n          <a-asset-item id="flexiguide-glb" src="').concat(e, 'assets/objects/flexiguide300.glb"></a-asset-item>\n          <img id="stencils-atlas" src="').concat(e, 'assets/materials/stencils-atlas_2048.png" crossorigin="anonymous" />\n          <img id="markings-atlas" src="').concat(e, 'assets/materials/lane-markings-atlas_1024.png" crossorigin="anonymous" />\n  \n          \x3c!-- optimized textures - used by default --\x3e\n          <img id="seamless-road" src="').concat(e, 'assets/materials/TexturesCom_Roads0086_1_seamless_S_rotate.jpg" crossorigin="anonymous">\n          <img id="hatched-base" src="').concat(e, 'assets/materials/hatched_Base_Color.jpg" crossorigin="anonymous">\n          <img id="hatched-normal" src="').concat(e, 'assets/materials/hatched_Normal.jpg" crossorigin="anonymous">\n          <img id="seamless-sidewalk" src="').concat(e, 'assets/materials/TexturesCom_FloorsRegular0301_1_seamless_S.jpg" crossorigin="anonymous">\n          <a-mixin id="drive-lane-t1" geometry="width:3;height:150;primitive:plane" material="repeat:0.3 25;offset:0.55 0;src:#seamless-road;"></a-mixin>\n          <a-mixin id="bike-lane-t1" geometry="width:1.8;height:150;primitive:plane" material="repeat:0.3 25;offset:0.55 0;roughness:1;metalness:0;src:#seamless-road;"></a-mixin>\n          <a-mixin id="sidewalk-t1" anisotropy geometry="width:3;height:150;primitive:plane" material="repeat:1.5 75;src:#seamless-sidewalk;"></a-mixin>\n          <a-mixin id="bus-lane-t1" geometry="width:3;height:150;primitive:plane" material="repeat:0.3 25;offset:0.55 0;src:#seamless-road;"></a-mixin>\n          <a-mixin id="divider-t1" geometry="width:0.3;height:150;primitive:plane" material="repeat:1 150;offset:0.415 0;normalTextureOffset:0.415 0;src:#hatched-base;normalTextureRepeat:0.21 150;normalMap:#hatched-normal"></a-mixin>\n          <a-mixin id="safehit" gltf-model="#flexiguide-glb" scale="1 1 1"></a-mixin>\n  \n          \x3c!-- lane separator markings atlas --\x3e\n          <a-mixin id="markings" anisotropy atlas-uvs="totalRows: 1; totalColumns: 8; row: 1" scale="1 1 1" material="src: #markings-atlas;alphaTest: 0;transparent:true;repeat:1 25;" geometry="primitive: plane; buffer: false; skipCache: true; width:0.2; height:150;"></a-mixin>\n          <a-mixin id="solid-stripe-t1" atlas-uvs="column: 3"></a-mixin>\n          <a-mixin id="solid-yellow-t1" atlas-uvs="column: 5"></a-mixin>\n          <a-mixin id="dashed-stripe-t1" atlas-uvs="column: 4"></a-mixin>\n          <a-mixin id="short-dashed-stripe-t1" atlas-uvs="column: 4" material="repeat:1 50;"></a-mixin>\n          <a-mixin id="solid-doubleyellow-t1" atlas-uvs="totalColumns: 4; column: 3" geometry="width: 0.5"></a-mixin>\n          <a-mixin id="solid-dashed-t1" atlas-uvs="totalColumns: 4; column: 2" geometry="width: 0.4"></a-mixin>\n  \n          \x3c!-- color modifier mixins --\x3e\n          <a-mixin id="yellow" material="color:#f7d117"></a-mixin>\n          <a-mixin id="surface-green" material="color:#adff83"></a-mixin>\n          <a-mixin id="surface-red" material="color:#ff9393"></a-mixin>\n  \n          \x3c!-- stencils atlas --\x3e\n          <a-mixin id="stencils" anisotropy atlas-uvs="totalRows: 4; totalColumns: 4" scale="2 2 2" material="src: #stencils-atlas;alphaTest: 0;transparent:true;" geometry="primitive: plane; buffer: false; skipCache: true"></a-mixin>\n          <a-mixin id="right" atlas-uvs="column: 3; row: 2"></a-mixin>\n          <a-mixin id="left" atlas-uvs="column: 3; row: 3"></a-mixin>\n          <a-mixin id="both" atlas-uvs="column: 2; row: 1"></a-mixin>\n          <a-mixin id="all" atlas-uvs="column: 3; row: 1"></a-mixin>\n          <a-mixin id="left-straight" atlas-uvs="column: 2; row: 3"></a-mixin>\n          <a-mixin id="right-straight" atlas-uvs="column: 2; row: 2"></a-mixin>\n          <a-mixin id="straight" atlas-uvs="column: 2; row: 4"></a-mixin>\n          <a-mixin id="sharrow" atlas-uvs="totalRows: 4; totalColumns: 8; column: 2; row: 3" scale="1.5 3 1"></a-mixin>\n          <a-mixin id="bike-lane" atlas-uvs="totalRows: 2; totalColumns: 8; column: 1; row: 2" scale="1 4 1"></a-mixin>\n          <a-mixin id="word-bus" atlas-uvs="totalRows: 8; totalColumns: 8; column: 1; row: 4" scale="3 3 3"></a-mixin>\n          <a-mixin id="word-lane" atlas-uvs="totalRows: 8; totalColumns: 8; column: 2; row: 4" scale="3 3 3"></a-mixin>\n          <a-mixin id="word-taxi" atlas-uvs="totalRows: 8; totalColumns: 8; column: 1; row: 3" scale="3 3 3"></a-mixin>\n          <a-mixin id="word-only" atlas-uvs="totalRows: 8; totalColumns: 8; column: 2; row: 3" scale="3 3 3"></a-mixin>\n          <a-mixin id="word-yield" atlas-uvs="totalRows: 8; totalColumns: 8; column: 1; row: 2" scale="3 3 3"></a-mixin>\n          <a-mixin id="word-slow" atlas-uvs="totalRows: 8; totalColumns: 8; column: 2; row: 2" scale="3 3 3"></a-mixin>\n          <a-mixin id="word-xing" atlas-uvs="totalRows: 8; totalColumns: 8; column: 1; row: 1" scale="3 3 3"></a-mixin>\n          <a-mixin id="word-stop" atlas-uvs="totalRows: 8; totalColumns: 8; column: 2; row: 1" scale="3 3 3"></a-mixin>\n          <a-mixin id="perpendicular-stalls" atlas-uvs="totalRows: 4; totalColumns: 8; column: 5; row: 4" scale="5 10 5"></a-mixin>\n          <a-mixin id="parking-delimiter" atlas-uvs="totalRows: 8; totalColumns: 8; column: 2; row: 7" scale="1.8 1.8 1.8"></a-mixin>\n  \n          \x3c!-- vehicles --\x3e\n          <a-mixin id="bus" anisotropy gltf-model="#xd40" scale="1.55 1.55 1.55"></a-mixin>\n          <a-mixin id="car" gltf-model="#carmodel"></a-mixin>\n          <a-mixin id="tram" anisotropy gltf-model="#trammodel" sound="src: #tram-pass-mp3;positional:false;volume: 0.4"></a-mixin>\n          <a-mixin id="trolley" gltf-model="#trolleymodel" sound="src: #trolley-pass-mp3;positional:false;volume: 0.4"scale="1 1 1"></a-mixin>\n\n          <img id="shadow-texture" src="').concat(e, 'assets/materials/bus-shadow.png" crossorigin="anonymous">\n          <a-mixin id="bus-shadow" geometry="width: 12; height: 3; primitive: plane"  material="src: #shadow-texture; alphaTest: 0;transparent:true; roughness: 1;" ></a-mixin>\n          <a-mixin id="car-shadow" geometry="width: 4.7; height: 2.5; primitive: plane"  material="src: #shadow-texture; alphaTest: 0;transparent:true; roughness: 1;" ></a-mixin>\n  \n          \x3c!-- street props --\x3e\n          <a-mixin id="tree3" gltf-model="#treemodel3" scale="1.25 1.25 1.25"></a-mixin>\n          <a-mixin id="palm-tree" gltf-model="#palmtreemodel" scale="1 1.5 1"></a-mixin>\n          <a-mixin id="bench" gltf-model="#benchmodel" scale="1 1 1"></a-mixin>\n          <a-mixin id="track" gltf-model="#trackmodel" scale="1 1 1"></a-mixin>\n          <a-mixin id="bikerack" gltf-model="#bikerackmodel" scale="0.25 0.25 0.25"></a-mixin>\n          <a-mixin id="bikeshare" gltf-model="#bikesharemodel" scale="1 1 1"></a-mixin>\n          <a-mixin id="lamp-modern" gltf-model="#lamp-modern-glb" scale="0.5 0.5 0.5"></a-mixin>\n          <a-mixin id="lamp-traditional" gltf-model="#lamp-traditional-glb" scale="0.2 0.2 0.2" ></a-mixin>\n          <a-mixin id="pride-flag" position="0.409 3.345 0" rotation="0 0 0" scale="0.5 0.75 0" geometry="width:2;height:2;primitive:plane" material="side:double; src:').concat(e, 'assets/materials/rainbow-flag-poles_512.png;transparent: true;"></a-mixin>\n          <a-mixin id="bus-stop" gltf-model="#bus-stop-glb" rotation="-90 0 0" scale="0.001 0.001 0.001" ></a-mixin>\n          <a-mixin id="wayfinding-box" geometry="primitive: box; height: 2; width: 0.84; depth: 0.1" material="color: gray"></a-mixin>\n  \n          \x3c!-- buildings and blocks --\x3e\n          <a-mixin id="block" gltf-model="#blockmodel" scale="1 1 1"></a-mixin>\n          <a-mixin id="suburbia" gltf-model="#suburbiamodel" scale="1 1 1"></a-mixin>\n  \n          <a-mixin id="SM3D_Bld_Mixed_Corner_4fl" scale="1 1 1" rotation="0 0 0" gltf-part-plus="src: #blockmodel; part: SM3D_Bld_Mixed_Corner_4fl" model-center="bottomAlign: true"></a-mixin>\n          <a-mixin id="SM3D_Bld_Mixed_Double_5fl" scale="1 1 1" rotation="0 0 0" gltf-part-plus="src: #blockmodel; part: SM3D_Bld_Mixed_Double_5fl" model-center="bottomAlign: true"></a-mixin>\n          <a-mixin id="SM3D_Bld_Mixed_4fl_2" scale="1 1 1" rotation="0 0 0" gltf-part-plus="src: #blockmodel; part: SM3D_Bld_Mixed_4fl_2" model-center="bottomAlign: true"></a-mixin>\n          <a-mixin id="SM3D_Bld_Mixed_5fl" scale="1 1 1" rotation="0 0 0" gltf-part-plus="src: #blockmodel; part: SM3D_Bld_Mixed_5fl" model-center="bottomAlign: true"></a-mixin>\n          <a-mixin id="SM3D_Bld_Mixed_4fl" scale="1 1 1" rotation="0 0 0" gltf-part-plus="src: #blockmodel; part: SM3D_Bld_Mixed_4fl" model-center="bottomAlign: true"></a-mixin>\n  \n          <a-mixin id="SM_Bld_House_Preset_03_1800" scale="1 1 1" rotation="0 0 0" gltf-part-plus="src: #suburbiamodel; part: SM_Bld_House_Preset_03_1800" model-center="bottomAlign: true"></a-mixin>\n          <a-mixin id="SM_Bld_House_Preset_08_1809" scale="1 1 1" rotation="0 0 0" gltf-part-plus="src: #suburbiamodel; part: SM_Bld_House_Preset_08_1809" model-center="bottomAlign: true"></a-mixin>\n          <a-mixin id="SM_Bld_House_Preset_09_1845" scale="1 1 1" rotation="0 0 0" gltf-part-plus="src: #suburbiamodel; part: SM_Bld_House_Preset_09_1845" model-center="bottomAlign: true"></a-mixin>\n  \n          <a-mixin id="seawall" gltf-model="#seawall-model" scale="1 1 1" rotation="0 0 0"></a-mixin>\n          <a-mixin id="fence" gltf-model="#fence-model" scale="0.1 0.1 0.1"></a-mixin>\n  \n          \x3c!-- grounds --\x3e\n          <img id="grass-texture" src="').concat(e, 'assets/materials/TexturesCom_Grass0052_1_seamless_S.jpg" crossorigin="anonymous">\n          <img id="parking-lot-texture" src="').concat(e, 'assets/materials/TexturesCom_Roads0111_1_seamless_S.jpg" crossorigin="anonymous">\n          <img id="asphalt-texture" src="').concat(e, 'assets/materials/TexturesCom_AsphaltDamaged0057_1_seamless_S.jpg" crossorigin="anonymous">\n\n          <a-mixin id="public-zone-t1" geometry="width:0.3;height:150;primitive:plane" material="repeat:1 150;offset:0.415 0;normalTextureOffset:0.415 0;src:#grass-texture;normalTextureRepeat:0.21 150;normalMap:#grass-texture"></a-mixin>\n          <a-mixin id="ground-grass" rotation="-90 0 0" geometry="primitive:plane;height:150;width:150" material="src:#grass-texture;repeat:5 5;roughness:1"></a-mixin>\n          <a-mixin id="ground-parking-lot" rotation="-90 0 0" geometry="primitive:plane;height:150;width:150" material="src:#parking-lot-texture;repeat:2 4;roughness:1"></a-mixin>\n          <a-mixin id="ground-asphalt" rotation="-90 0 0" geometry="primitive:plane;height:150;width:150" material="src:#asphalt-texture;repeat:5 5;roughness:1"></a-mixin>\n  \n          \x3c!-- ui / future use --\x3e\n          <img id="subtitle" src="').concat(e, 'assets/materials/subtitle.png" crossorigin="anonymous" />\n  ')); const i = this.parentNode; this.setAttribute('timeout', i.getAttribute('timeout')), this.parentNode.isScene = !0, Object.getPrototypeOf(i).attachedCallback.call(this), this.parentNode.isScene = !1 } } }, load: { value: function () { AFRAME.ANode.prototype.load.call(this, null, function (t) { return t.isAssetItem && t.hasAttribute('src') }) } } }) }), window.addEventListener('DOMContentLoaded', function (e) { if (!t) { let i = document.querySelector('a-assets'); i || (i = document.createElement('a-assets')), i.hasLoaded && console.warn('Assets already loaded. May lead to bugs'); const a = document.createElement('streetmix-assets'); i.append(a), document.querySelector('a-scene').append(i) } }), document.addEventListener('DOMSubtreeModified', function t (e) { if (e.target.nodeName === 'A-SCENE') { let i = e.target.querySelector('a-assets'); if (i || (i = document.createElement('a-assets'), e.target.append(i)), i.querySelector('streetmix-assets'))document.removeEventListener('DOMSubtreeModified', t); else { const a = document.createElement('streetmix-assets'); i.append(a), document.removeEventListener('DOMSubtreeModified', t) } } }, !1) }, 391: (t, e, i) => { const a = i(334); AFRAME.registerComponent('create-from-json', { schema: { jsonString: { type: 'string', default: '' } }, update: function (t) { const e = this.data; const i = this.el; if (t.string && e.string !== t.string) for (;i.firstChild;)i.removeChild(i.lastChild); a.appendChildElementsFromArray(JSON.parse(e.jsonString), i) } }) }, 579: (t, e, i) => { const a = i(844); const n = i(394); i(234), i(391), i(631), i(485), window.AFRAME.registerComponent('display-meter', { init: function () { const t = this.el; const e = document.getElementById('text'); this.data, t.getAttribute('material').color, t.addEventListener('mouseenter', function () { meter = Math.floor(10 * t.getAttribute('text-value')) / 10, e.setAttribute('value', meter + 'm'), meter !== 0 && (e.setAttribute('visible', 'true'), t.setAttribute('material', 'color: black')) }), t.addEventListener('mouseleave', function () { t.setAttribute('material', 'color: white'), e.setAttribute('visible', 'false') }) } }), AFRAME.registerComponent('street', { schema: { JSON: { type: 'string' }, type: { default: 'streetmixSegmentsFeet' }, left: { default: '' }, right: { default: '' }, showGround: { default: !0 }, showStriping: { default: !0 }, length: { default: 150 } }, update: function (t) { const e = this.data; if (e.JSON.length !== 0) { const i = JSON.parse(e.JSON); console.log(i); const r = a.processSegments(i.streetmixSegmentsFeet, e.showStriping, e.length); if (console.log(r), this.el.append(r), e.left || e.right) { const s = n.calcStreetWidth(i.streetmixSegmentsFeet, e.autoStriping); const o = a.processBuildings(e.left, e.right, s, e.showGround, e.length); this.el.append(o) } } else { if (void 0 !== t.JSON && t.JSON.length === 0) return; console.log('[street]', 'No JSON provided yet, but it might be set at runtime') } } }), AFRAME.registerComponent('streetmix-loader', { dependencies: ['street'], schema: { streetmixStreetURL: { type: 'string' }, streetmixAPIURL: { type: 'string' }, showBuildings: { default: !0 } }, update: function (t) { const e = this.data; const i = this.el; if (e.streetmixAPIURL.length !== 0) { const a = new XMLHttpRequest(); console.log('[streetmix-loader]', 'GET ' + e.streetmixAPIURL), a.open('GET', e.streetmixAPIURL, !0), a.onload = function () { if (this.status >= 200 && this.status < 400) { const t = JSON.parse(this.response); const a = t.data.street.segments; console.log(a), a[0].type == 'sidewalk' && a[0].width == 10 && a[1].type == 'drive-lane' && a[1].variantString == 'inbound|sharrow' && a[1].width == 15 && a[2].type == 'drive-lane' && a[1].variantString == 'inbound|sharrow' && a[2].width == 15 && a[3].type == 'sidewalk' && a[3].width == 10 && window.location.replace('15mPlanView.html'), a[0].type == 'sidewalk' && a[0].width == 8.33333 && a[1].type == 'drive-lane' && a[1].variantString == 'inbound|sharrow' && a[1].width == 15 && a[2].type == 'turn-lane' && a[2].variantString == 'inbound|right-straight' && a[2].width == 10 && a[3].type == 'turn-lane' && a[3].variantString == 'outbound|left-straight' && a[3].width == 10 && a[4].type == 'drive-lane' && a[4].variantString == 'outbound|sharrow' && a[4].width == 15 && a[5].type == 'sidewalk' && a[5].width == 8.33333 && window.location.replace('20mPlanView.html'), a[0].type == 'sidewalk' && a[0].width == 6.66667 && a[1].type == 'sidewalk' && a[1].width == 5 && a[2].type == 'parking-lane' && a[2].variantString == 'inbound|right' && a[2].width == 3.33333 && a[3].type == 'drive-lane' && a[3].variantString == 'inbound|car' && a[3].width == 11.66667 && a[4].type == 'turn-lane' && a[4].variantString == 'inbound|left-straight' && a[4].width == 10 && a[5].type == 'parking-lane' && a[5].variantString == 'inbound|right' && a[5].width == 1.66667 && a[6].type == 'divider' && a[6].variantString == 'median' && a[6].width == 6.66667 && a[7].type == 'parking-lane' && a[7].variantString == 'inbound|left' && a[7].width == 1.66667 && a[8].type == 'turn-lane' && a[8].variantString == 'outbound|left-straight' && a[8].width == 10 && a[9].type == 'drive-lane' && a[9].variantString == 'outbound|car' && a[9].width == 11.66667 && a[10].type == 'parking-lane' && a[10].variantString == 'inbound|left' && a[10].width == 3.33333 && a[11].type == 'sidewalk' && a[11].width == 5 && a[12].type == 'sidewalk' && a[12].width == 6.66667 && window.location.replace('25mPlanView.html'), a[0].type == 'sidewalk' && a[0].variantString == 'normal' && a[0].width == 8.33333 && a[1].type == 'bike-lane' && a[1].variantString == 'inbound|regular|road' && a[1].width == 5 && a[2].type == 'sidewalk' && a[2].variantString == 'empty' && a[2].width == 6.66667 && a[3].type == 'parking-lane' && a[3].variantString == 'inbound|right' && a[3].width == 3.33333 && a[4].type == 'drive-lane' && a[4].variantString == 'inbound|car' && a[4].width == 11.66667 && a[5].type == 'turn-lane' && a[5].variantString == 'inbound|left-straight' && a[5].width == 10 && a[6].type == 'parking-lane' && a[6].variantString == 'inbound|right' && a[6].width == 1.66667 && a[7].type == 'divider' && a[7].variantString == 'median' && a[7].width == 6.66667 && a[8].type == 'parking-lane' && a[8].variantString == 'inbound|left' && a[8].width == 1.66667 && a[9].type == 'turn-lane' && a[9].variantString == 'outbound|left-straight' && a[9].width == 10 && a[10].type == 'drive-lane' && a[10].variantString == 'outbound|car' && a[10].width == 11.66667 && a[11].type == 'parking-lane' && a[11].variantString == 'inbound|left' && a[11].width == 3.33333 && a[12].type == 'sidewalk' && a[12].variantString == 'empty' && a[12].width == 6.66667 && a[13].type == 'bike-lane' && a[13].variantString == 'outbound|regular|road' && a[13].width == 5 && a[14].type == 'sidewalk' && a[14].variantString == 'normal' && a[14].width == 8.33333 && window.location.replace('30mPlanView.html'), a[0].type == 'sidewalk' && a[0].variantString == 'normal' && a[0].width == 8.33333 && a[1].type == 'divider' && a[1].variantString == 'planting-strip' && a[1].width == 5 && a[2].type == 'bike-lane' && a[2].variantString == 'inbound|regular|road' && a[2].width == 6.66667 && a[3].type == 'sidewalk' && a[3].variantString == 'empty' && a[3].width == 5 && a[4].type == 'parking-lane' && a[4].variantString == 'inbound|right' && a[4].width == 3.33333 && a[5].type == 'drive-lane' && a[5].variantString == 'inbound|sharrow' && a[5].width == 11.66667 && a[6].type == 'drive-lane' && a[6].variantString == 'inbound|car' && a[6].width == 11.66667 && a[7].type == 'turn-lane' && a[7].variantString == 'inbound|left-straight' && a[7].width == 10 && a[8].type == 'parking-lane' && a[8].variantString == 'inbound|right' && a[8].width == 1.66667 && a[9].type == 'divider' && a[9].variantString == 'median' && a[9].width == 6.66667 && a[10].type == 'parking-lane' && a[10].variantString == 'inbound|left' && a[10].width == 1.66667 && a[11].type == 'turn-lane' && a[11].variantString == 'outbound|left-straight' && a[11].width == 10 && a[12].type == 'drive-lane' && a[12].variantString == 'outbound|car' && a[12].width == 11.66667 && a[13].type == 'drive-lane' && a[13].variantString == 'outbound|sharrow' && a[13].width == 11.66667 && a[14].type == 'parking-lane' && a[14].variantString == 'inbound|left' && a[14].width == 3.33333 && a[15].type == 'sidewalk' && a[15].variantString == 'empty' && a[15].width == 5 && a[16].type == 'bike-lane' && a[16].variantString == 'outbound|regular|road' && a[16].width == 6.66667 && a[17].type == 'divider' && a[17].variantString == 'planting-strip' && a[17].width == 5 && a[18].type == 'sidewalk' && a[18].variantString == 'normal' && a[18].width == 8.33333 && window.location.replace('40mPlanView.html'); for (var n = 0, r = 0; r < a.length; r++)n += parseFloat(a[r].width); i.setAttribute('totalWidth', 0.3048 * n), e.showBuildings && (i.setAttribute('street', 'right', t.data.street.rightBuildingVariant), i.setAttribute('street', 'left', t.data.street.leftBuildingVariant)), i.setAttribute('street', 'type', 'streetmixSegmentsFeet'), i.setAttribute('street', 'JSON', JSON.stringify({ streetmixSegmentsFeet: a })) } else console.log('[streetmix-loader]', 'Loading Error: We reached the target server, but it returned an error') }, a.onerror = function () { console.log('[streetmix-loader]', 'Loading Error: There was a connection error of some sort') }, a.send() } else { if (e.streetmixStreetURL.length > 0) { const r = n.streetmixUserToAPI(e.streetmixStreetURL); return console.log('[streetmix-loader]', 'setting `streetmixAPIURL` to', r), void i.setAttribute('streetmix-loader', 'streetmixAPIURL', r) }console.log('[streetmix-loader]', 'Neither `streetmixAPIURL` nor `streetmixStreetURL` properties provided, please provide at least one.') } } }) }, 199: t => { t.exports.isSidewalk = function (t) { return t.startsWith('sidewalk') || ['scooter-drop-zone', 'bikeshare', 'flex-zone-curb', 'transit-shelter'].includes(t) }, t.exports.createBuildingsArray = function () { let t; let e; const i = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 150; const a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 'narrow'; a === 'narrow' || a === 'wide' ? (t = [{ id: 'SM3D_Bld_Mixed_4fl', width: 5.25221 }, { id: 'SM3D_Bld_Mixed_Double_5fl', width: 10.9041 }, { id: 'SM3D_Bld_Mixed_4fl_2', width: 5.58889 }, { id: 'SM3D_Bld_Mixed_5fl', width: 6.47593 }, { id: 'SM3D_Bld_Mixed_Corner_4fl', width: 6.94809 }], e = '41431323432402434130303230234102402341') : a === 'residential' && (t = [{ id: 'SM_Bld_House_Preset_03_1800', width: 20 }, { id: 'SM_Bld_House_Preset_08_1809', width: 20 }, { id: 'SM_Bld_House_Preset_09_1845', width: 20 }], e = '12021201210101212021201012012021201210'); for (var n = 0, r = 0, s = []; r < i;) { const o = t[parseInt(e[n])]; const l = { tag: 'a-entity', mixin: o.id, position: r + o.width / 2 + ' 0 0' }; s.push(l), r += o.width, n++ } return s }, t.exports.filterBuildingsArrayByMixin = function (t, e) { const i = []; return t.forEach(function (t, a) { t.mixin === e && i.push(t) }), i }, t.exports.removePropertyFromArray = function (t, e) { return t.forEach(function (t, i) { delete t[e] }), t }, t.exports.createClonedEntitiesArray = function (t) { for (var e = t.mixin, i = void 0 === e ? '' : e, a = t.step, n = void 0 === a ? 15 : a, r = t.radius, s = void 0 === r ? 60 : r, o = t.rotation, l = void 0 === o ? '0 0 0' : o, d = t.positionXYString, m = void 0 === d ? '0 0' : d, c = t.randomY, u = void 0 !== c && c, p = [], g = -1 * s; g <= s; g += n) { const h = { tag: 'a-entity', position: m + ' ' + g }; i && (h.class = i, h.mixin = i), h.rotation = u ? '0 ' + Math.floor(361 * randomTestable()) + ' 0' : l, p.push(h) } return p }, t.exports.getAmbientSoundJSON = function (t) { const e = { fence: '#suburbs-mp3', grass: '#suburbs-mp3', 'parking-lot': '#parking-lot-mp3', waterfront: '#waterfront', residential: '#suburbs2-mp3', narrow: '#ambientmp3', wide: '#ambientmp3' }; const i = []; let a = null; return t.forEach(function (t, n) { if (!a || a !== e[t]) { const r = { tag: 'a-entity', class: 'playme', sound: 'src: ' + e[t] + '; positional: false; loop: true' }; i.push(r), a = e[t] } }), i }, t.exports.createGroundArray = function (t) { const e = []; let i = 'ground-grass'; if (t === 'waterfront') return e; ['narrow', 'wide'].includes(t) && (i = 'ground-asphalt'), t === 'parking-lot' && (i = 'ground-parking-lot'); const a = { tag: 'a-entity', position: '0 -0.2 0', mixin: i }; return e.push(a), e } }, 334: t => { function e (t, e) { return (function (t) { if (Array.isArray(t)) return t }(t)) || (function (t, e) { if (typeof Symbol !== 'undefined' && Symbol.iterator in Object(t)) { const i = []; let a = !0; let n = !1; let r = void 0; try { for (var s, o = t[Symbol.iterator](); !(a = (s = o.next()).done) && (i.push(s.value), !e || i.length !== e); a = !0); } catch (t) { n = !0, r = t } finally { try { a || o.return == null || o.return() } finally { if (n) throw r } } return i } }(t, e)) || (function (t, e) { if (t) { if (typeof t === 'string') return i(t, e); let a = Object.prototype.toString.call(t).slice(8, -1); return a === 'Object' && t.constructor && (a = t.constructor.name), a === 'Map' || a === 'Set' ? Array.from(t) : a === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a) ? i(t, e) : void 0 } }(t, e)) || (function () { throw new TypeError('Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.') }()) } function i (t, e) { (e == null || e > t.length) && (e = t.length); for (var i = 0, a = new Array(e); i < e; i++)a[i] = t[i]; return a } function a () { const t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; const i = document.createElement(t.tag); delete t.tag; for (let a = 0, n = Object.entries(t); a < n.length; a++) { const r = e(n[a], 2); const s = r[0]; const o = r[1]; i.setAttribute(s, o) } return i }t.exports.createElementFromObject = a, t.exports.appendChildElementsFromArray = function () { const t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []; const e = arguments.length > 1 ? arguments[1] : void 0; return t.forEach(function (t, i) { e.appendChild(a(t)) }), e } }, 394: t => { t.exports.streetmixUserToAPI = function (t) { const e = new URL(t).pathname.split('/'); const i = e[1]; const a = e[2]; return i === '-' ? 'https://' + location.host + '/api/v1/streets?namespacedId=' + a : 'https://' + location.host + '/api/v1/streets?namespacedId=' + a + '&creatorId=' + i }, t.exports.pathStartsWithAPI = function (t) { const e = document.createElement('a'); return e.href = t, e.pathname.split('/')[1] === 'api' }, t.exports.streetmixAPIToUser = function (t) { function e (t, e) { for (let i = t.split('&'), a = 0; a < i.length; a++) { const n = i[a].split('='); if (decodeURIComponent(n[0]) === e) return decodeURIComponent(n[1]) }console.log('Query variable %s not found', e) } const i = new URL(t).search.substring(1); const a = e(i, 'namespacedId'); let n = e(i, 'creatorId'); return void 0 === n && (n = '-'), 'https://' + location.host + '/' + n + '/' + a }, t.exports.calcStreetWidth = function (t) { let e = 0; return t.forEach(function (t) { const i = t.width; e += 0.3048 * i }), e } } }, e = {}, (function i (a) { if (e[a]) return e[a].exports; const n = e[a] = { exports: {} }; return t[a](n, n.exports, i), n.exports }(579)); let t, e }))
